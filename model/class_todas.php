
<?php

// This is a autogenerated file:Welcome

class Todas {
    private int $idBase; // json:id_base Required
    private string $ip; // json:ip Required
    private string $db; // json:db Required
    private string $usuario; // json:usuario Required
    private string $clave; // json:clave Required
    private string $pais; // json:pais Required
    private string $cojer; // json:cojer Required
    private string $tabla; // json:tabla Required

    /**
     * @param int $idBase
     * @param string $ip
     * @param string $db
     * @param string $usuario
     * @param string $clave
     * @param string $pais
     * @param string $cojer
     * @param string $tabla
     */
    public function __construct(int $idBase, string $ip, string $db, string $usuario, string $clave, string $pais, string $cojer, string $tabla) {
        $this->idBase = $idBase;
        $this->ip = $ip;
        $this->db = $db;
        $this->usuario = $usuario;
        $this->clave = $clave;
        $this->pais = $pais;
        $this->cojer = $cojer;
        $this->tabla = $tabla;
    }

    /**
     * @param int $value
     * @throws Exception
     * @return int
     */
    public static function fromIDBase(int $value): int {
        return $value; /*int*/
    }

    /**
     * @throws Exception
     * @return int
     */
    public function toIDBase(): int {
        if (Todas::validateIDBase($this->idBase))  {
            return $this->idBase; /*int*/
        }
        throw new Exception('never get to this Welcome::idBase');
    }

    /**
     * @param int
     * @return bool
     * @throws Exception
     */
    public static function validateIDBase(int $value): bool {
        if (!is_integer($value)) {
            throw new Exception("Attribute Error:Welcome::idBase");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return int
     */
    public function getIDBase(): int {
        if (Todas::validateIDBase($this->idBase))  {
            return $this->idBase;
        }
        throw new Exception('never get to getIDBase Welcome::idBase');
    }

    /**
     * @return int
     */
    public static function sampleIDBase(): int {
        return 31; /*31:idBase*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromIP(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toIP(): string {
        if (Todas::validateIP($this->ip))  {
            return $this->ip; /*string*/
        }
        throw new Exception('never get to this Welcome::ip');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateIP(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::ip");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getIP(): string {
        if (Todas::validateIP($this->ip))  {
            return $this->ip;
        }
        throw new Exception('never get to getIP Welcome::ip');
    }

    /**
     * @return string
     */
    public static function sampleIP(): string {
        return 'Welcome::ip::32'; /*32:ip*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromDB(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toDB(): string {
        if (Todas::validateDB($this->db))  {
            return $this->db; /*string*/
        }
        throw new Exception('never get to this Welcome::db');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateDB(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::db");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getDB(): string {
        if (Todas::validateDB($this->db))  {
            return $this->db;
        }
        throw new Exception('never get to getDB Welcome::db');
    }

    /**
     * @return string
     */
    public static function sampleDB(): string {
        return 'Welcome::db::33'; /*33:db*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromUsuario(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toUsuario(): string {
        if (Todas::validateUsuario($this->usuario))  {
            return $this->usuario; /*string*/
        }
        throw new Exception('never get to this Welcome::usuario');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateUsuario(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::usuario");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getUsuario(): string {
        if (Todas::validateUsuario($this->usuario))  {
            return $this->usuario;
        }
        throw new Exception('never get to getUsuario Welcome::usuario');
    }

    /**
     * @return string
     */
    public static function sampleUsuario(): string {
        return 'Welcome::usuario::34'; /*34:usuario*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromClave(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toClave(): string {
        if (Todas::validateClave($this->clave))  {
            return $this->clave; /*string*/
        }
        throw new Exception('never get to this Welcome::clave');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateClave(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::clave");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getClave(): string {
        if (Todas::validateClave($this->clave))  {
            return $this->clave;
        }
        throw new Exception('never get to getClave Welcome::clave');
    }

    /**
     * @return string
     */
    public static function sampleClave(): string {
        return 'Welcome::clave::35'; /*35:clave*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromPais(string $value): string {
        return $value; /*string*/
    }

   /**
     * @throws Exception
     * @return string
     */
    public function toPais(): string {
        if (Todas::validatePais($this->pais))  {
            return $this->pais; /*string*/
        }
        throw new Exception('never get to this Welcome::pais');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validatePais(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::pais");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getPais(): string {
        if (Todas::validatePais($this->pais))  {
            return $this->pais;
        }
        throw new Exception('never get to getPais Welcome::pais');
    }

    /**
     * @return string
     */
    public static function samplePais(): string {
        return 'Welcome::pais::36'; /*36:pais*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromCojer(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toCojer(): string {
        if (Todas::validateCojer($this->cojer))  {
            return $this->cojer; /*string*/
        }
        throw new Exception('never get to this Welcome::cojer');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateCojer(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::cojer");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getCojer(): string {
        if (Todas::validateCojer($this->cojer))  {
            return $this->cojer;
        }
        throw new Exception('never get to getCojer Welcome::cojer');
    }

    /**
     * @return string
     */
    public static function sampleCojer(): string {
        return 'Welcome::cojer::37'; /*37:cojer*/
    }

    /**
     * @param string $value
     * @throws Exception
     * @return string
     */
    public static function fromTabla(string $value): string {
        return $value; /*string*/
    }

    /**
     * @throws Exception
     * @return string
     */
    public function toTabla(): string {
        if (Todas::validateTabla($this->tabla))  {
            return $this->tabla; /*string*/
        }
        throw new Exception('never get to this Welcome::tabla');
    }

    /**
     * @param string
     * @return bool
     * @throws Exception
     */
    public static function validateTabla(string $value): bool {
        if (!is_string($value)) {
            throw new Exception("Attribute Error:Welcome::tabla");
        }
        return true;
    }

    /**
     * @throws Exception
     * @return string
     */
    public function getTabla(): string {
        if (Todas::validateTabla($this->tabla))  {
            return $this->tabla;
        }
        throw new Exception('never get to getTabla Welcome::tabla');
    }

    /**
     * @return string
     */
    public static function sampleTabla(): string {
        return 'Welcome::tabla::38'; /*38:tabla*/
    }

    /**
     * @throws Exception
     * @return bool
     */
    public function validate(): bool {
        return Todas::validateIDBase($this->idBase)
        || Todas::validateIP($this->ip)
        || Todas::validateDB($this->db)
        || Todas::validateUsuario($this->usuario)
        || Todas::validateClave($this->clave)
        || Todas::validatePais($this->pais)
        || Todas::validateCojer($this->cojer)
        || Todas::validateTabla($this->tabla);
    }

    /**
     * @return stdClass
     * @throws Exception
     */
    public function to(): stdClass  {
        $out = new stdClass();
        $out->{'id_base'} = $this->toIDBase();
        $out->{'ip'} = $this->toIP();
        $out->{'db'} = $this->toDB();
        $out->{'usuario'} = $this->toUsuario();
        $out->{'clave'} = $this->toClave();
        $out->{'pais'} = $this->toPais();
        $out->{'cojer'} = $this->toCojer();
        $out->{'tabla'} = $this->toTabla();
        return $out;
    }

    /**
     * @param stdClass $obj
     * @return Todas
     * @throws Exception
     */
    public static function from(stdClass $obj): Todas {
        return new Todas(
         Todas::fromIDBase($obj->{'id_base'})
        ,Todas::fromIP($obj->{'ip'})
        ,Todas::fromDB($obj->{'db'})
        ,Todas::fromUsuario($obj->{'usuario'})
        ,Todas::fromClave($obj->{'clave'})
        ,Todas::fromPais($obj->{'pais'})
        ,Todas::fromCojer($obj->{'cojer'})
        ,Todas::fromTabla($obj->{'tabla'})
        );
    }

    /**
     * @return Welcome
     */
    public static function sample(): Todas {
        return new Todas(
         Todas::sampleIDBase()
        ,Todas::sampleIP()
        ,Todas::sampleDB()
        ,Todas::sampleUsuario()
        ,Todas::sampleClave()
        ,Todas::samplePais()
        ,Todas::sampleCojer()
        ,Todas::sampleTabla()
        );
    }
}
